//7-1 简单计算器
/*
7-1 简单计算器
分数 10
作者 张彤彧
单位 浙江大学
模拟简单运算器的工作。假设计算器只能进行加减乘除运算，运算数和结果都是整数，四种运算符的优先级相同，按从左到右的顺序计算。

输入格式:
输入在一行中给出一个四则运算算式，没有空格，且至少有一个操作数。遇等号”=”说明输入结束。

输出格式:
在一行中输出算式的运算结果，或者如果除法分母为0或有非法运算符，则输出错误信息“ERROR”。

输入样例:
1+2*10-10/2=
输出样例:
10
*/
#include <stdio.h>
int main ()
{
    int a,b;
    char n;
    scanf("%d",&a);
    b=a;
    scanf("%c",&n);
    while(n!='=')
    {
        scanf("%d",&a);
        switch(n)
    {
            case '+':b+=a;break;
            case '-':b-=a;break;
            case '*':b*=a;break;
            case '/':if(a==0){printf("ERROR");return 0;}
                b/=a;break;
            default :printf("ERROR");return 0;
    }
        scanf("%c",&n);
    }
    printf("%d\n",b);
    return 0;
}
//法二
#include <stdio.h>
int main()
{
int r;
scanf("%d",&r);
char ch;
while((ch=getchar())!='=')
{   int num;
    scanf("%d",&num);
    if(ch=='+') r+=num;
    else if(ch=='-') r-=num;
    else if(ch=='*') r*=num;
    else if(ch=='/'){
        if(num==0){
            printf("ERROR\n");
            return 0;
        }
        r/=num;
    }
    else{
        printf("ERROR\n");
        return 0;
        
    }
}
printf("%d\n",r);
return 0;
}
//法三
#include <stdio.h>
int main()
{
int r;
scanf("%d",&r);
char ch;
while((ch=getchar())!='=')
{   int num;
    scanf("%d",&num);
    switch(ch){
	
    case '+': r+=num;break;
    case '-':  r-=num;break;
    case '*':  r*=num;break;
    case '/': 
        if(num==0)
		{
            printf("ERROR\n");
            return 0;
        }
        r/=num;
        break;
   
    default:
        printf("ERROR\n");
        return 0;
              }  
} 

printf("%d\n",r);
return 0;
}
//7-2 解一元一次方程
/*
7-2 解一元一次方程
分数 10
作者 李祥
单位 湖北经济学院
请编写程序，解一元一次方程 ax+b=0 。

一元一次方程求解公式为：

题图.jpg

要求：

若 a

=0，则方程有唯一解，输出这个解；
若 a=0,b

=0，则方程无解，输出“无解”；
若 a=0,b=0，则方程有无穷多解，输出“无穷多解”。
输入格式
a,b

输出格式
x

注：实数以格式限定符 %g 输出。

输入样例1
4.5 -3.6
输出样例1
x = 0.8
输入样例2
2.8 0
输出样例2
x = 0
输入样例3
0 3.6
输出样例3
无解
输入样例4
0 0
输出样例4
无穷多解
提示：注意实数的负零问题。

*/
#include <stdio.h>
int main ()
{
double a,b,x;
scanf("%lf%lf",&a,&b);
if (a!=0)
{x=(-1*b)/a;
 if (x==0)
 printf("x = 0");
 else
printf("x = %g",x);
}
if(a==0&&b!=0)
printf("无解");
if(a==0&&b==0)
printf("无穷多解");
}
//7-3 小游戏
/*
7-3 小游戏
分数 10
作者 黄龙军
单位 绍兴文理学院
有一个小游戏，6个人上台去算手中扑克牌点数之和是否5的倍数，据说是小学生玩的。这里稍微修改一下玩法，n个人上台，算手中数字之和是否同时是5，7，3的倍数。

输入格式:
首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组测试先输入1个整数n（1≤n≤15），再输入n个整数，每个都小于1000。

输出格式:
对于每组测试，若n个整数之和同时是5，7，3的倍数则输出“YES”，否则输出“NO”。引号不必输出。

输入样例:
2
3 123 27 60
3 23 27 60
输出样例:
YES
NO
*/
#include <stdio.h>
int main ()
{
int T,n,i,j,a,b;
scanf("%d",&T);
for(i=1;i<=T;i++){
    scanf("%d",&n);
    b=0;
    for(j=1;j<=n;j++){
        scanf("%d",&a);
        b=b+a;
    }
    if(b%5==0&&b%3==0&&b%7==0){
        printf("YES\n");
    }else{ 
        printf("NO\n");
    }
    b=0;
}
}
//7-4 程序设计基础-分支结构-测试-饮酒驾车还是醉酒驾车
/*
7-4 程序设计基础-分支结构-测试-饮酒驾车还是醉酒驾车
分数 8
作者 万静
单位 北京化工大学
以国家质量监督检验检疫局颁布的《车辆驾驶人员血液、呼气酒精含量阈值与检验》国家标准,来界定你是属于饮酒驾车还是醉酒驾车。
A）饮酒驾车的标准为：你的血液中的酒精含量在每百毫升血液中高于酒精20毫克，且低于80毫克。
B）醉酒驾车的标准为：你的血液中的酒精含量在每百毫升血液中高于（含）酒精80毫克。
从键盘输入你每百毫升血液中的酒精含量（毫克），输出“A”代表饮酒驾车、输出“B”代表醉酒驾车，输出“NOT”代表两者都不是（不输出引号）。

输入格式:
输入一个非负整数。

输出格式:
输出“A”代表饮酒驾车、输出“B”代表醉酒驾车，输出“NOT”代表两者都不是（不输出引号）。

输入样例:
96
输出样例:
B
*/
#include <stdio.h>
int main ()
{
int j;
scanf("%d",&j);
if(j>=20&&j<80)
printf("A");
else if (j>=80)
printf("B");
else 
printf("NOT");
}

